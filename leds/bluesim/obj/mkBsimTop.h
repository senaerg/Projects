/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Wed Mar 25 12:47:42 EDT 2015
 * 
 */

/* Generation options: */
#ifndef __mkBsimTop_h__
#define __mkBsimTop_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkLedControllerRequestInputPipes.h"


/* Class declaration for the mkBsimTop module */
class MOD_mkBsimTop : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
  tClock __clk_handle_1;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_ClockDivider INST_divider;
  MOD_Reg<tUInt32> INST_host_crw_cycles;
  MOD_Reg<tUInt8> INST_host_crw_init_fsm_onceReady;
  MOD_CReg<tUInt64> INST_host_crw_wf_rv;
  MOD_MakeReset INST_single_reset;
  MOD_Fifo<tUInt8> INST_top_ctrl_mux_rv_doneFifo;
  MOD_Fifo<tUInt64> INST_top_ctrl_mux_rv_readDataPipes_0_fifo;
  MOD_Fifo<tUInt32> INST_top_ctrl_mux_rv_req_ars;
  MOD_Fifo<tUInt32> INST_top_ctrl_mux_rv_req_aws;
  MOD_Fifo<tUInt8> INST_top_ctrl_mux_rv_rs;
  MOD_Fifo<tUInt64> INST_top_ctrl_mux_rv_writeDataPipes_0_fifo;
  MOD_Fifo<tUInt64> INST_top_ctrl_mux_rv_write_data;
  MOD_Fifo<tUInt8> INST_top_ctrl_mux_rv_ws;
  MOD_mkLedControllerRequestInputPipes INST_top_lLedControllerRequestInputPipes;
  MOD_Fifo<tUInt64> INST_top_lLedController_ledsCmdFifo;
  MOD_Reg<tUInt8> INST_top_lLedController_ledsValue;
  MOD_Reg<tUInt32> INST_top_lLedController_remainingDuration;
  MOD_Reg<tUInt64> INST_top_portalEnt_0_ctrlPort_cycle_count;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_addrBeatFifo;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_addrReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_burstCountReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_isFirstReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_isLastReg;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_requestFifo;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_addrReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_burstCountReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_isFirstReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_isLastReg;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_requestFifo;
  MOD_Fifo<tUInt64> INST_top_portalEnt_0_ctrlPort_fifoWriteDataFifo;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_ctrlPort_fifoWriteDoneFifo;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_ctrlPort_interruptEnableReg;
  MOD_Reg<tUInt32> INST_top_portalEnt_0_ctrlPort_num_portals_reg;
  MOD_Reg<tUInt32> INST_top_portalEnt_0_ctrlPort_snapshot;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_doneFifo;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_addrBeatFifo;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_addrReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_burstCountReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_isFirstReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_isLastReg;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_fifoReadAddrGenerator_requestFifo;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_addrBeatFifo;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_addrReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_burstCountReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_isFirstReg;
  MOD_Reg<tUInt8> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_isLastReg;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_fifoWriteAddrGenerator_requestFifo;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_fifoWriteDoneFifo;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_req_ars;
  MOD_Fifo<tUInt32> INST_top_portalEnt_0_memslave_req_aws;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_rs;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_rsCtrl;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_ws;
  MOD_Fifo<tUInt8> INST_top_portalEnt_0_memslave_wsCtrl;
 
 /* Constructor */
 public:
  MOD_mkBsimTop(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_single_reset$OUT_RST;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_top_portalEnt_0_memslave_rsCtrl_first____d149;
  tUInt8 DEF_top_portalEnt_0_memslave_wsCtrl_first____d129;
  tUInt64 DEF_host_crw_wf_rv_port0__read____d287;
  tUInt32 DEF_duration__h997;
  tUInt32 DEF_top_portalEnt_0_memslave_fifoWriteAddrGenerato_ETC___d205;
  tUInt32 DEF_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerato_ETC___d70;
  tUInt8 DEF_top_portalEnt_0_memslave_fifoWriteAddrGenerato_ETC___d206;
  tUInt8 DEF_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerato_ETC___d71;
  tUInt8 DEF_top_lLedController_remainingDuration_EQ_0___d5;
 
 /* Local definitions */
 private:
  tUInt64 DEF_TASK_getRequest32___d282;
  tUInt64 DEF_TASK_getRequest32___d262;
  tUInt64 DEF_top_portalEnt_0_ctrlPort_cycle_count__h6481;
  tUInt8 DEF_NOT_top_portalEnt_0_memslave_wsCtrl_first__29___d136;
  tUInt8 DEF_NOT_top_portalEnt_0_memslave_rsCtrl_first__49___d156;
 
 /* Rules */
 public:
  void RL_int_rule();
  void RL_host_crw_count();
  void RL_host_crw_init_rule();
  void RL_top_lLedController_updateLeds();
  void RL_top_handle_setLeds_request();
  void RL_top_portalEnt_0_ctrlPort_fifoReadAddrGenerator_addrBeatRule();
  void RL_top_portalEnt_0_ctrlPort_fifoWriteAddrGenerator_addrBeatRule();
  void RL_top_portalEnt_0_ctrlPort_count();
  void RL_top_portalEnt_0_ctrlPort_writeDataRule();
  void RL_top_portalEnt_0_memslave_fifoReadAddrGenerator_addrBeatRule();
  void RL_top_portalEnt_0_memslave_fifoWriteAddrGenerator_addrBeatRule();
  void RL_top_portalEnt_0_memslave_write_done();
  void RL_top_portalEnt_0_memslave_req_aw();
  void RL_top_portalEnt_0_memslave_req_ar();
  void RL_top_ctrl_mux_writeTop();
  void RL_top_ctrl_mux_rv_readDataPipes_0_connect();
  void RL_top_ctrl_mux_rv_writeDataPipes_0_connect();
  void RL_top_ctrl_mux_rv_0_connect();
  void RL_top_ctrl_mux_rv_req_aw();
  void RL_top_ctrl_mux_rv_req_ar();
  void RL_top_ctrl_mux_rv_write_done_rule();
  void RL_Prelude_inst_changeSpecialWires_mkConnectionGetPut();
  void RL_Prelude_inst_changeSpecialWires_1_mkConnectionGetPut();
  void RL_Prelude_inst_changeSpecialWires_2_mkConnectionGetPut();
  void RL_Prelude_inst_changeSpecialWires_3_mkConnectionGetPut();
  void RL_Prelude_inst_changeSpecialWires_4_mkConnectionGetPut();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_single_reset$OUT_RST(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
  static void static_reset_single_reset$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
  void set_clk_1(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBsimTop &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBsimTop &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBsimTop &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkBsimTop &backing);
};

#endif /* ifndef __mkBsimTop_h__ */
