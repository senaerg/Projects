//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// timestamp removed
//
//
// Ports:
// Name                         I/O  size props
// pipes_portalIfc_messageSize    O    16 const
// RDY_pipes_portalIfc_messageSize  O     1 const
// RDY_pipes_portalIfc_requests_0_enq  O     1
// pipes_portalIfc_requests_0_notFull  O     1 reg
// RDY_pipes_portalIfc_requests_0_notFull  O     1 const
// pipes_portalIfc_intr_status    O     1 const
// RDY_pipes_portalIfc_intr_status  O     1 const
// pipes_portalIfc_intr_channel   O    32 const
// RDY_pipes_portalIfc_intr_channel  O     1 const
// pipes_setLeds_PipeOut_first    O    40 reg
// RDY_pipes_setLeds_PipeOut_first  O     1 reg
// RDY_pipes_setLeds_PipeOut_deq  O     1 reg
// pipes_setLeds_PipeOut_notEmpty  O     1 reg
// RDY_pipes_setLeds_PipeOut_notEmpty  O     1 const
// RDY_portalIfc_slave_read_server_readReq_put  O     1
// portalIfc_slave_read_server_readData_get  O    39
// RDY_portalIfc_slave_read_server_readData_get  O     1
// RDY_portalIfc_slave_write_server_writeReq_put  O     1
// RDY_portalIfc_slave_write_server_writeData_put  O     1
// portalIfc_slave_write_server_writeDone_get  O     6 reg
// RDY_portalIfc_slave_write_server_writeDone_get  O     1 reg
// portalIfc_interrupt__read      O     1 const
// RDY_portalIfc_interrupt__read  O     1 const
// RDY_portalIfc_num_portals__write  O     1 const
// id                             I    32
// CLK                            I     1 clock
// RST_N                          I     1 reset
// pipes_portalIfc_messageSize_methodNumber  I    16 unused
// pipes_portalIfc_requests_0_enq_v  I    32
// portalIfc_slave_read_server_readReq_put  I    26
// portalIfc_slave_write_server_writeReq_put  I    26
// portalIfc_slave_write_server_writeData_put  I    39
// portalIfc_num_portals__write_x  I    32 reg
// EN_pipes_portalIfc_requests_0_enq  I     1
// EN_pipes_setLeds_PipeOut_deq   I     1
// EN_portalIfc_slave_read_server_readReq_put  I     1
// EN_portalIfc_slave_write_server_writeReq_put  I     1
// EN_portalIfc_slave_write_server_writeData_put  I     1
// EN_portalIfc_num_portals__write  I     1
// EN_portalIfc_slave_read_server_readData_get  I     1
// EN_portalIfc_slave_write_server_writeDone_get  I     1
//
// Combinational paths from inputs to outputs:
//   id -> portalIfc_slave_read_server_readData_get
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkLedControllerRequestWrapperMemPortalPipes(id,
						   CLK,
						   RST_N,

						   pipes_portalIfc_messageSize_methodNumber,
						   pipes_portalIfc_messageSize,
						   RDY_pipes_portalIfc_messageSize,

						   pipes_portalIfc_requests_0_enq_v,
						   EN_pipes_portalIfc_requests_0_enq,
						   RDY_pipes_portalIfc_requests_0_enq,

						   pipes_portalIfc_requests_0_notFull,
						   RDY_pipes_portalIfc_requests_0_notFull,

						   pipes_portalIfc_intr_status,
						   RDY_pipes_portalIfc_intr_status,

						   pipes_portalIfc_intr_channel,
						   RDY_pipes_portalIfc_intr_channel,

						   pipes_setLeds_PipeOut_first,
						   RDY_pipes_setLeds_PipeOut_first,

						   EN_pipes_setLeds_PipeOut_deq,
						   RDY_pipes_setLeds_PipeOut_deq,

						   pipes_setLeds_PipeOut_notEmpty,
						   RDY_pipes_setLeds_PipeOut_notEmpty,

						   portalIfc_slave_read_server_readReq_put,
						   EN_portalIfc_slave_read_server_readReq_put,
						   RDY_portalIfc_slave_read_server_readReq_put,

						   EN_portalIfc_slave_read_server_readData_get,
						   portalIfc_slave_read_server_readData_get,
						   RDY_portalIfc_slave_read_server_readData_get,

						   portalIfc_slave_write_server_writeReq_put,
						   EN_portalIfc_slave_write_server_writeReq_put,
						   RDY_portalIfc_slave_write_server_writeReq_put,

						   portalIfc_slave_write_server_writeData_put,
						   EN_portalIfc_slave_write_server_writeData_put,
						   RDY_portalIfc_slave_write_server_writeData_put,

						   EN_portalIfc_slave_write_server_writeDone_get,
						   portalIfc_slave_write_server_writeDone_get,
						   RDY_portalIfc_slave_write_server_writeDone_get,

						   portalIfc_interrupt__read,
						   RDY_portalIfc_interrupt__read,

						   portalIfc_num_portals__write_x,
						   EN_portalIfc_num_portals__write,
						   RDY_portalIfc_num_portals__write);
  input  [31 : 0] id;
  input  CLK;
  input  RST_N;

  // value method pipes_portalIfc_messageSize
  input  [15 : 0] pipes_portalIfc_messageSize_methodNumber;
  output [15 : 0] pipes_portalIfc_messageSize;
  output RDY_pipes_portalIfc_messageSize;

  // action method pipes_portalIfc_requests_0_enq
  input  [31 : 0] pipes_portalIfc_requests_0_enq_v;
  input  EN_pipes_portalIfc_requests_0_enq;
  output RDY_pipes_portalIfc_requests_0_enq;

  // value method pipes_portalIfc_requests_0_notFull
  output pipes_portalIfc_requests_0_notFull;
  output RDY_pipes_portalIfc_requests_0_notFull;

  // value method pipes_portalIfc_intr_status
  output pipes_portalIfc_intr_status;
  output RDY_pipes_portalIfc_intr_status;

  // value method pipes_portalIfc_intr_channel
  output [31 : 0] pipes_portalIfc_intr_channel;
  output RDY_pipes_portalIfc_intr_channel;

  // value method pipes_setLeds_PipeOut_first
  output [39 : 0] pipes_setLeds_PipeOut_first;
  output RDY_pipes_setLeds_PipeOut_first;

  // action method pipes_setLeds_PipeOut_deq
  input  EN_pipes_setLeds_PipeOut_deq;
  output RDY_pipes_setLeds_PipeOut_deq;

  // value method pipes_setLeds_PipeOut_notEmpty
  output pipes_setLeds_PipeOut_notEmpty;
  output RDY_pipes_setLeds_PipeOut_notEmpty;

  // action method portalIfc_slave_read_server_readReq_put
  input  [25 : 0] portalIfc_slave_read_server_readReq_put;
  input  EN_portalIfc_slave_read_server_readReq_put;
  output RDY_portalIfc_slave_read_server_readReq_put;

  // actionvalue method portalIfc_slave_read_server_readData_get
  input  EN_portalIfc_slave_read_server_readData_get;
  output [38 : 0] portalIfc_slave_read_server_readData_get;
  output RDY_portalIfc_slave_read_server_readData_get;

  // action method portalIfc_slave_write_server_writeReq_put
  input  [25 : 0] portalIfc_slave_write_server_writeReq_put;
  input  EN_portalIfc_slave_write_server_writeReq_put;
  output RDY_portalIfc_slave_write_server_writeReq_put;

  // action method portalIfc_slave_write_server_writeData_put
  input  [38 : 0] portalIfc_slave_write_server_writeData_put;
  input  EN_portalIfc_slave_write_server_writeData_put;
  output RDY_portalIfc_slave_write_server_writeData_put;

  // actionvalue method portalIfc_slave_write_server_writeDone_get
  input  EN_portalIfc_slave_write_server_writeDone_get;
  output [5 : 0] portalIfc_slave_write_server_writeDone_get;
  output RDY_portalIfc_slave_write_server_writeDone_get;

  // value method portalIfc_interrupt__read
  output portalIfc_interrupt__read;
  output RDY_portalIfc_interrupt__read;

  // action method portalIfc_num_portals__write
  input  [31 : 0] portalIfc_num_portals__write_x;
  input  EN_portalIfc_num_portals__write;
  output RDY_portalIfc_num_portals__write;

  // signals for module outputs
  wire [39 : 0] pipes_setLeds_PipeOut_first;
  wire [38 : 0] portalIfc_slave_read_server_readData_get;
  wire [31 : 0] pipes_portalIfc_intr_channel;
  wire [15 : 0] pipes_portalIfc_messageSize;
  wire [5 : 0] portalIfc_slave_write_server_writeDone_get;
  wire RDY_pipes_portalIfc_intr_channel,
       RDY_pipes_portalIfc_intr_status,
       RDY_pipes_portalIfc_messageSize,
       RDY_pipes_portalIfc_requests_0_enq,
       RDY_pipes_portalIfc_requests_0_notFull,
       RDY_pipes_setLeds_PipeOut_deq,
       RDY_pipes_setLeds_PipeOut_first,
       RDY_pipes_setLeds_PipeOut_notEmpty,
       RDY_portalIfc_interrupt__read,
       RDY_portalIfc_num_portals__write,
       RDY_portalIfc_slave_read_server_readData_get,
       RDY_portalIfc_slave_read_server_readReq_put,
       RDY_portalIfc_slave_write_server_writeData_put,
       RDY_portalIfc_slave_write_server_writeDone_get,
       RDY_portalIfc_slave_write_server_writeReq_put,
       pipes_portalIfc_intr_status,
       pipes_portalIfc_requests_0_notFull,
       pipes_setLeds_PipeOut_notEmpty,
       portalIfc_interrupt__read;

  // register memPortal_ctrlPort_cycle_count
  reg [63 : 0] memPortal_ctrlPort_cycle_count;
  wire [63 : 0] memPortal_ctrlPort_cycle_count_D_IN;
  wire memPortal_ctrlPort_cycle_count_EN;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_addrReg
  reg [4 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_addrReg;
  wire [4 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_D_IN;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_EN;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg
  reg [7 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg;
  wire [7 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_D_IN;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_EN;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg
  reg memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_D_IN,
       memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_EN;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg
  reg memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_D_IN,
       memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_EN;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg
  reg [4 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg;
  wire [4 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_D_IN;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_EN;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg
  reg [7 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg;
  wire [7 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_D_IN;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_EN;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg
  reg memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_D_IN,
       memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_EN;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg
  reg memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_D_IN,
       memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_EN;

  // register memPortal_ctrlPort_interruptEnableReg
  reg memPortal_ctrlPort_interruptEnableReg;
  wire memPortal_ctrlPort_interruptEnableReg_D_IN,
       memPortal_ctrlPort_interruptEnableReg_EN;

  // register memPortal_ctrlPort_num_portals_reg
  reg [31 : 0] memPortal_ctrlPort_num_portals_reg;
  wire [31 : 0] memPortal_ctrlPort_num_portals_reg_D_IN;
  wire memPortal_ctrlPort_num_portals_reg_EN;

  // register memPortal_ctrlPort_snapshot
  reg [31 : 0] memPortal_ctrlPort_snapshot;
  wire [31 : 0] memPortal_ctrlPort_snapshot_D_IN;
  wire memPortal_ctrlPort_snapshot_EN;

  // register memPortal_memslave_fifoReadAddrGenerator_addrReg
  reg [4 : 0] memPortal_memslave_fifoReadAddrGenerator_addrReg;
  wire [4 : 0] memPortal_memslave_fifoReadAddrGenerator_addrReg_D_IN;
  wire memPortal_memslave_fifoReadAddrGenerator_addrReg_EN;

  // register memPortal_memslave_fifoReadAddrGenerator_burstCountReg
  reg [7 : 0] memPortal_memslave_fifoReadAddrGenerator_burstCountReg;
  wire [7 : 0] memPortal_memslave_fifoReadAddrGenerator_burstCountReg_D_IN;
  wire memPortal_memslave_fifoReadAddrGenerator_burstCountReg_EN;

  // register memPortal_memslave_fifoReadAddrGenerator_isFirstReg
  reg memPortal_memslave_fifoReadAddrGenerator_isFirstReg;
  wire memPortal_memslave_fifoReadAddrGenerator_isFirstReg_D_IN,
       memPortal_memslave_fifoReadAddrGenerator_isFirstReg_EN;

  // register memPortal_memslave_fifoReadAddrGenerator_isLastReg
  reg memPortal_memslave_fifoReadAddrGenerator_isLastReg;
  wire memPortal_memslave_fifoReadAddrGenerator_isLastReg_D_IN,
       memPortal_memslave_fifoReadAddrGenerator_isLastReg_EN;

  // register memPortal_memslave_fifoWriteAddrGenerator_addrReg
  reg [4 : 0] memPortal_memslave_fifoWriteAddrGenerator_addrReg;
  wire [4 : 0] memPortal_memslave_fifoWriteAddrGenerator_addrReg_D_IN;
  wire memPortal_memslave_fifoWriteAddrGenerator_addrReg_EN;

  // register memPortal_memslave_fifoWriteAddrGenerator_burstCountReg
  reg [7 : 0] memPortal_memslave_fifoWriteAddrGenerator_burstCountReg;
  wire [7 : 0] memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_D_IN;
  wire memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_EN;

  // register memPortal_memslave_fifoWriteAddrGenerator_isFirstReg
  reg memPortal_memslave_fifoWriteAddrGenerator_isFirstReg;
  wire memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_D_IN,
       memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_EN;

  // register memPortal_memslave_fifoWriteAddrGenerator_isLastReg
  reg memPortal_memslave_fifoWriteAddrGenerator_isLastReg;
  wire memPortal_memslave_fifoWriteAddrGenerator_isLastReg_D_IN,
       memPortal_memslave_fifoWriteAddrGenerator_isLastReg_EN;

  // ports of submodule memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo
  wire [19 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_IN,
		memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_CLR,
       memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_DEQ,
       memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N,
       memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_ENQ,
       memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N;

  // ports of submodule memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo
  wire [18 : 0] memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_IN,
		memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT;
  wire memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_CLR,
       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_DEQ,
       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N,
       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_ENQ,
       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_FULL_N;

  // ports of submodule memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo
  wire [19 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_IN,
		memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_CLR,
       memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_DEQ,
       memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N,
       memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_ENQ,
       memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N;

  // ports of submodule memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo
  wire [18 : 0] memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_IN,
		memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT;
  wire memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_CLR,
       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_DEQ,
       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N,
       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_ENQ,
       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_FULL_N;

  // ports of submodule memPortal_ctrlPort_fifoWriteDataFifo
  wire [38 : 0] memPortal_ctrlPort_fifoWriteDataFifo_D_IN,
		memPortal_ctrlPort_fifoWriteDataFifo_D_OUT;
  wire memPortal_ctrlPort_fifoWriteDataFifo_CLR,
       memPortal_ctrlPort_fifoWriteDataFifo_DEQ,
       memPortal_ctrlPort_fifoWriteDataFifo_EMPTY_N,
       memPortal_ctrlPort_fifoWriteDataFifo_ENQ,
       memPortal_ctrlPort_fifoWriteDataFifo_FULL_N;

  // ports of submodule memPortal_ctrlPort_fifoWriteDoneFifo
  wire [5 : 0] memPortal_ctrlPort_fifoWriteDoneFifo_D_IN,
	       memPortal_ctrlPort_fifoWriteDoneFifo_D_OUT;
  wire memPortal_ctrlPort_fifoWriteDoneFifo_CLR,
       memPortal_ctrlPort_fifoWriteDoneFifo_DEQ,
       memPortal_ctrlPort_fifoWriteDoneFifo_EMPTY_N,
       memPortal_ctrlPort_fifoWriteDoneFifo_ENQ,
       memPortal_ctrlPort_fifoWriteDoneFifo_FULL_N;

  // ports of submodule memPortal_memslave_doneFifo
  wire [5 : 0] memPortal_memslave_doneFifo_D_IN,
	       memPortal_memslave_doneFifo_D_OUT;
  wire memPortal_memslave_doneFifo_CLR,
       memPortal_memslave_doneFifo_DEQ,
       memPortal_memslave_doneFifo_EMPTY_N,
       memPortal_memslave_doneFifo_ENQ,
       memPortal_memslave_doneFifo_FULL_N;

  // ports of submodule memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo
  wire [19 : 0] memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_IN,
		memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_OUT;
  wire memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_CLR,
       memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_DEQ,
       memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N,
       memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_ENQ,
       memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N;

  // ports of submodule memPortal_memslave_fifoReadAddrGenerator_requestFifo
  wire [18 : 0] memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_IN,
		memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT;
  wire memPortal_memslave_fifoReadAddrGenerator_requestFifo_CLR,
       memPortal_memslave_fifoReadAddrGenerator_requestFifo_DEQ,
       memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N,
       memPortal_memslave_fifoReadAddrGenerator_requestFifo_ENQ,
       memPortal_memslave_fifoReadAddrGenerator_requestFifo_FULL_N;

  // ports of submodule memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo
  wire [19 : 0] memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_IN,
		memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_OUT;
  wire memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_CLR,
       memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_DEQ,
       memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N,
       memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_ENQ,
       memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N;

  // ports of submodule memPortal_memslave_fifoWriteAddrGenerator_requestFifo
  wire [18 : 0] memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_IN,
		memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT;
  wire memPortal_memslave_fifoWriteAddrGenerator_requestFifo_CLR,
       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_DEQ,
       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N,
       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_ENQ,
       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_FULL_N;

  // ports of submodule memPortal_memslave_fifoWriteDoneFifo
  wire [5 : 0] memPortal_memslave_fifoWriteDoneFifo_D_IN,
	       memPortal_memslave_fifoWriteDoneFifo_D_OUT;
  wire memPortal_memslave_fifoWriteDoneFifo_CLR,
       memPortal_memslave_fifoWriteDoneFifo_DEQ,
       memPortal_memslave_fifoWriteDoneFifo_EMPTY_N,
       memPortal_memslave_fifoWriteDoneFifo_ENQ,
       memPortal_memslave_fifoWriteDoneFifo_FULL_N;

  // ports of submodule memPortal_memslave_req_ars
  wire [18 : 0] memPortal_memslave_req_ars_D_IN,
		memPortal_memslave_req_ars_D_OUT;
  wire memPortal_memslave_req_ars_CLR,
       memPortal_memslave_req_ars_DEQ,
       memPortal_memslave_req_ars_EMPTY_N,
       memPortal_memslave_req_ars_ENQ,
       memPortal_memslave_req_ars_FULL_N;

  // ports of submodule memPortal_memslave_req_aws
  wire [18 : 0] memPortal_memslave_req_aws_D_IN,
		memPortal_memslave_req_aws_D_OUT;
  wire memPortal_memslave_req_aws_CLR,
       memPortal_memslave_req_aws_DEQ,
       memPortal_memslave_req_aws_EMPTY_N,
       memPortal_memslave_req_aws_ENQ,
       memPortal_memslave_req_aws_FULL_N;

  // ports of submodule memPortal_memslave_rs
  wire memPortal_memslave_rs_CLR,
       memPortal_memslave_rs_DEQ,
       memPortal_memslave_rs_EMPTY_N,
       memPortal_memslave_rs_ENQ,
       memPortal_memslave_rs_FULL_N;

  // ports of submodule memPortal_memslave_rsCtrl
  wire memPortal_memslave_rsCtrl_CLR,
       memPortal_memslave_rsCtrl_DEQ,
       memPortal_memslave_rsCtrl_D_IN,
       memPortal_memslave_rsCtrl_D_OUT,
       memPortal_memslave_rsCtrl_EMPTY_N,
       memPortal_memslave_rsCtrl_ENQ,
       memPortal_memslave_rsCtrl_FULL_N;

  // ports of submodule memPortal_memslave_ws
  wire memPortal_memslave_ws_CLR,
       memPortal_memslave_ws_DEQ,
       memPortal_memslave_ws_EMPTY_N,
       memPortal_memslave_ws_ENQ,
       memPortal_memslave_ws_FULL_N;

  // ports of submodule memPortal_memslave_wsCtrl
  wire memPortal_memslave_wsCtrl_CLR,
       memPortal_memslave_wsCtrl_DEQ,
       memPortal_memslave_wsCtrl_D_IN,
       memPortal_memslave_wsCtrl_D_OUT,
       memPortal_memslave_wsCtrl_EMPTY_N,
       memPortal_memslave_wsCtrl_ENQ,
       memPortal_memslave_wsCtrl_FULL_N;

  // ports of submodule p
  wire [39 : 0] p_setLeds_PipeOut_first;
  wire [31 : 0] p_portalIfc_intr_channel, p_portalIfc_requests_0_enq_v;
  wire [15 : 0] p_portalIfc_messageSize, p_portalIfc_messageSize_methodNumber;
  wire p_EN_portalIfc_requests_0_enq,
       p_EN_setLeds_PipeOut_deq,
       p_RDY_portalIfc_requests_0_enq,
       p_RDY_setLeds_PipeOut_deq,
       p_RDY_setLeds_PipeOut_first,
       p_portalIfc_intr_status,
       p_portalIfc_requests_0_notFull,
       p_setLeds_PipeOut_notEmpty;

  // rule scheduling signals
  wire WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule,
       WILL_FIRE_RL_memPortal_memslave_req_ar,
       WILL_FIRE_RL_memPortal_memslave_req_aw,
       WILL_FIRE_RL_memPortal_memslave_write_done;

  // inputs to muxes for submodule ports
  wire MUX_p_portalIfc_requests_0_enq_1__SEL_1;

  // remaining internal signals
  reg [31 : 0] _theResult_____2__h5194;
  wire [31 : 0] y_avValue_data__h5281;
  wire [7 : 0] burstCount___1__h1227,
	       burstCount___1__h2631,
	       burstCount___1__h3274,
	       burstCount___1__h584,
	       burstCount__h1192,
	       burstCount__h2596,
	       burstCount__h3239,
	       burstCount__h549;
  wire [4 : 0] addr__h1189, addr__h2593, addr__h3236, addr__h546;
  wire IF_memPortal_ctrlPort_fifoReadAddrGenerator_is_ETC___d19,
       IF_memPortal_ctrlPort_fifoWriteAddrGenerator_i_ETC___d41,
       IF_memPortal_memslave_fifoReadAddrGenerator_is_ETC___d79,
       IF_memPortal_memslave_fifoWriteAddrGenerator_i_ETC___d101,
       memPortal_memslave_doneFifo_i_notFull__07_AND__ETC___d112,
       memPortal_memslave_req_aws_i_notEmpty__19_AND__ETC___d123,
       memPortal_memslave_rsCtrl_i_notEmpty__27_AND_I_ETC___d132,
       memPortal_memslave_rs_i_notEmpty__82_AND_IF_me_ETC___d186;

  // value method pipes_portalIfc_messageSize
  assign pipes_portalIfc_messageSize = p_portalIfc_messageSize ;
  assign RDY_pipes_portalIfc_messageSize = 1'd1 ;

  // action method pipes_portalIfc_requests_0_enq
  assign RDY_pipes_portalIfc_requests_0_enq = p_RDY_portalIfc_requests_0_enq ;

  // value method pipes_portalIfc_requests_0_notFull
  assign pipes_portalIfc_requests_0_notFull = p_portalIfc_requests_0_notFull ;
  assign RDY_pipes_portalIfc_requests_0_notFull = 1'd1 ;

  // value method pipes_portalIfc_intr_status
  assign pipes_portalIfc_intr_status = p_portalIfc_intr_status ;
  assign RDY_pipes_portalIfc_intr_status = 1'd1 ;

  // value method pipes_portalIfc_intr_channel
  assign pipes_portalIfc_intr_channel = p_portalIfc_intr_channel ;
  assign RDY_pipes_portalIfc_intr_channel = 1'd1 ;

  // value method pipes_setLeds_PipeOut_first
  assign pipes_setLeds_PipeOut_first = p_setLeds_PipeOut_first ;
  assign RDY_pipes_setLeds_PipeOut_first = p_RDY_setLeds_PipeOut_first ;

  // action method pipes_setLeds_PipeOut_deq
  assign RDY_pipes_setLeds_PipeOut_deq = p_RDY_setLeds_PipeOut_deq ;

  // value method pipes_setLeds_PipeOut_notEmpty
  assign pipes_setLeds_PipeOut_notEmpty = p_setLeds_PipeOut_notEmpty ;
  assign RDY_pipes_setLeds_PipeOut_notEmpty = 1'd1 ;

  // action method portalIfc_slave_read_server_readReq_put
  assign RDY_portalIfc_slave_read_server_readReq_put =
	     memPortal_memslave_req_ars_FULL_N &&
	     memPortal_memslave_rs_FULL_N &&
	     memPortal_memslave_rsCtrl_FULL_N ;

  // actionvalue method portalIfc_slave_read_server_readData_get
  assign portalIfc_slave_read_server_readData_get =
	     memPortal_memslave_rsCtrl_D_OUT ?
	       { _theResult_____2__h5194,
		 memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT[6:0] } :
	       { y_avValue_data__h5281,
		 memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_OUT[6:0] } ;
  assign RDY_portalIfc_slave_read_server_readData_get =
	     memPortal_memslave_rsCtrl_EMPTY_N &&
	     memPortal_memslave_rs_i_notEmpty__82_AND_IF_me_ETC___d186 ;

  // action method portalIfc_slave_write_server_writeReq_put
  assign RDY_portalIfc_slave_write_server_writeReq_put =
	     memPortal_memslave_req_aws_FULL_N &&
	     memPortal_memslave_ws_FULL_N &&
	     memPortal_memslave_wsCtrl_FULL_N ;

  // action method portalIfc_slave_write_server_writeData_put
  assign RDY_portalIfc_slave_write_server_writeData_put =
	     memPortal_memslave_wsCtrl_EMPTY_N &&
	     (memPortal_memslave_wsCtrl_D_OUT ?
		memPortal_ctrlPort_fifoWriteDataFifo_FULL_N :
		p_RDY_portalIfc_requests_0_enq &&
		memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N &&
		(!memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[0] ||
		 memPortal_memslave_fifoWriteDoneFifo_FULL_N)) ;

  // actionvalue method portalIfc_slave_write_server_writeDone_get
  assign portalIfc_slave_write_server_writeDone_get =
	     memPortal_memslave_doneFifo_D_OUT ;
  assign RDY_portalIfc_slave_write_server_writeDone_get =
	     memPortal_memslave_doneFifo_EMPTY_N ;

  // value method portalIfc_interrupt__read
  assign portalIfc_interrupt__read = 1'd0 ;
  assign RDY_portalIfc_interrupt__read = 1'd1 ;

  // action method portalIfc_num_portals__write
  assign RDY_portalIfc_num_portals__write = 1'd1 ;

  // submodule memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo
  FIFO2 #(.width(32'd20),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_IN),
										 .ENQ(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_ENQ),
										 .DEQ(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_DEQ),
										 .CLR(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_CLR),
										 .D_OUT(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT),
										 .FULL_N(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N),
										 .EMPTY_N(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N));

  // submodule memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo(.RST(RST_N),
										.CLK(CLK),
										.D_IN(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_IN),
										.ENQ(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_ENQ),
										.DEQ(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_DEQ),
										.CLR(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_CLR),
										.D_OUT(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT),
										.FULL_N(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_FULL_N),
										.EMPTY_N(memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N));

  // submodule memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo
  FIFO2 #(.width(32'd20),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo(.RST(RST_N),
										  .CLK(CLK),
										  .D_IN(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_IN),
										  .ENQ(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_ENQ),
										  .DEQ(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_DEQ),
										  .CLR(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_CLR),
										  .D_OUT(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT),
										  .FULL_N(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N),
										  .EMPTY_N(memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N));

  // submodule memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_IN),
										 .ENQ(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_ENQ),
										 .DEQ(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_DEQ),
										 .CLR(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_CLR),
										 .D_OUT(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT),
										 .FULL_N(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_FULL_N),
										 .EMPTY_N(memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N));

  // submodule memPortal_ctrlPort_fifoWriteDataFifo
  FIFO2 #(.width(32'd39),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoWriteDataFifo(.RST(RST_N),
								.CLK(CLK),
								.D_IN(memPortal_ctrlPort_fifoWriteDataFifo_D_IN),
								.ENQ(memPortal_ctrlPort_fifoWriteDataFifo_ENQ),
								.DEQ(memPortal_ctrlPort_fifoWriteDataFifo_DEQ),
								.CLR(memPortal_ctrlPort_fifoWriteDataFifo_CLR),
								.D_OUT(memPortal_ctrlPort_fifoWriteDataFifo_D_OUT),
								.FULL_N(memPortal_ctrlPort_fifoWriteDataFifo_FULL_N),
								.EMPTY_N(memPortal_ctrlPort_fifoWriteDataFifo_EMPTY_N));

  // submodule memPortal_ctrlPort_fifoWriteDoneFifo
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) memPortal_ctrlPort_fifoWriteDoneFifo(.RST(RST_N),
								.CLK(CLK),
								.D_IN(memPortal_ctrlPort_fifoWriteDoneFifo_D_IN),
								.ENQ(memPortal_ctrlPort_fifoWriteDoneFifo_ENQ),
								.DEQ(memPortal_ctrlPort_fifoWriteDoneFifo_DEQ),
								.CLR(memPortal_ctrlPort_fifoWriteDoneFifo_CLR),
								.D_OUT(memPortal_ctrlPort_fifoWriteDoneFifo_D_OUT),
								.FULL_N(memPortal_ctrlPort_fifoWriteDoneFifo_FULL_N),
								.EMPTY_N(memPortal_ctrlPort_fifoWriteDoneFifo_EMPTY_N));

  // submodule memPortal_memslave_doneFifo
  FIFO1 #(.width(32'd6),
	  .guarded(32'd1)) memPortal_memslave_doneFifo(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(memPortal_memslave_doneFifo_D_IN),
						       .ENQ(memPortal_memslave_doneFifo_ENQ),
						       .DEQ(memPortal_memslave_doneFifo_DEQ),
						       .CLR(memPortal_memslave_doneFifo_CLR),
						       .D_OUT(memPortal_memslave_doneFifo_D_OUT),
						       .FULL_N(memPortal_memslave_doneFifo_FULL_N),
						       .EMPTY_N(memPortal_memslave_doneFifo_EMPTY_N));

  // submodule memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo
  FIFO2 #(.width(32'd20),
	  .guarded(32'd1)) memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_IN),
										 .ENQ(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_ENQ),
										 .DEQ(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_DEQ),
										 .CLR(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_CLR),
										 .D_OUT(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_OUT),
										 .FULL_N(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N),
										 .EMPTY_N(memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N));

  // submodule memPortal_memslave_fifoReadAddrGenerator_requestFifo
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_memslave_fifoReadAddrGenerator_requestFifo(.RST(RST_N),
										.CLK(CLK),
										.D_IN(memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_IN),
										.ENQ(memPortal_memslave_fifoReadAddrGenerator_requestFifo_ENQ),
										.DEQ(memPortal_memslave_fifoReadAddrGenerator_requestFifo_DEQ),
										.CLR(memPortal_memslave_fifoReadAddrGenerator_requestFifo_CLR),
										.D_OUT(memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT),
										.FULL_N(memPortal_memslave_fifoReadAddrGenerator_requestFifo_FULL_N),
										.EMPTY_N(memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N));

  // submodule memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo
  FIFO2 #(.width(32'd20),
	  .guarded(32'd1)) memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo(.RST(RST_N),
										  .CLK(CLK),
										  .D_IN(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_IN),
										  .ENQ(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_ENQ),
										  .DEQ(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_DEQ),
										  .CLR(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_CLR),
										  .D_OUT(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_OUT),
										  .FULL_N(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N),
										  .EMPTY_N(memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N));

  // submodule memPortal_memslave_fifoWriteAddrGenerator_requestFifo
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_memslave_fifoWriteAddrGenerator_requestFifo(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_IN),
										 .ENQ(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_ENQ),
										 .DEQ(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_DEQ),
										 .CLR(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_CLR),
										 .D_OUT(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT),
										 .FULL_N(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_FULL_N),
										 .EMPTY_N(memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N));

  // submodule memPortal_memslave_fifoWriteDoneFifo
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) memPortal_memslave_fifoWriteDoneFifo(.RST(RST_N),
								.CLK(CLK),
								.D_IN(memPortal_memslave_fifoWriteDoneFifo_D_IN),
								.ENQ(memPortal_memslave_fifoWriteDoneFifo_ENQ),
								.DEQ(memPortal_memslave_fifoWriteDoneFifo_DEQ),
								.CLR(memPortal_memslave_fifoWriteDoneFifo_CLR),
								.D_OUT(memPortal_memslave_fifoWriteDoneFifo_D_OUT),
								.FULL_N(memPortal_memslave_fifoWriteDoneFifo_FULL_N),
								.EMPTY_N(memPortal_memslave_fifoWriteDoneFifo_EMPTY_N));

  // submodule memPortal_memslave_req_ars
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_memslave_req_ars(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(memPortal_memslave_req_ars_D_IN),
						      .ENQ(memPortal_memslave_req_ars_ENQ),
						      .DEQ(memPortal_memslave_req_ars_DEQ),
						      .CLR(memPortal_memslave_req_ars_CLR),
						      .D_OUT(memPortal_memslave_req_ars_D_OUT),
						      .FULL_N(memPortal_memslave_req_ars_FULL_N),
						      .EMPTY_N(memPortal_memslave_req_ars_EMPTY_N));

  // submodule memPortal_memslave_req_aws
  FIFO1 #(.width(32'd19),
	  .guarded(32'd1)) memPortal_memslave_req_aws(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(memPortal_memslave_req_aws_D_IN),
						      .ENQ(memPortal_memslave_req_aws_ENQ),
						      .DEQ(memPortal_memslave_req_aws_DEQ),
						      .CLR(memPortal_memslave_req_aws_CLR),
						      .D_OUT(memPortal_memslave_req_aws_D_OUT),
						      .FULL_N(memPortal_memslave_req_aws_FULL_N),
						      .EMPTY_N(memPortal_memslave_req_aws_EMPTY_N));

  // submodule memPortal_memslave_rs
  FIFO10 #(.guarded(32'd1)) memPortal_memslave_rs(.RST(RST_N),
						  .CLK(CLK),
						  .ENQ(memPortal_memslave_rs_ENQ),
						  .DEQ(memPortal_memslave_rs_DEQ),
						  .CLR(memPortal_memslave_rs_CLR),
						  .FULL_N(memPortal_memslave_rs_FULL_N),
						  .EMPTY_N(memPortal_memslave_rs_EMPTY_N));

  // submodule memPortal_memslave_rsCtrl
  FIFO1 #(.width(32'd1),
	  .guarded(32'd1)) memPortal_memslave_rsCtrl(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(memPortal_memslave_rsCtrl_D_IN),
						     .ENQ(memPortal_memslave_rsCtrl_ENQ),
						     .DEQ(memPortal_memslave_rsCtrl_DEQ),
						     .CLR(memPortal_memslave_rsCtrl_CLR),
						     .D_OUT(memPortal_memslave_rsCtrl_D_OUT),
						     .FULL_N(memPortal_memslave_rsCtrl_FULL_N),
						     .EMPTY_N(memPortal_memslave_rsCtrl_EMPTY_N));

  // submodule memPortal_memslave_ws
  FIFO10 #(.guarded(32'd1)) memPortal_memslave_ws(.RST(RST_N),
						  .CLK(CLK),
						  .ENQ(memPortal_memslave_ws_ENQ),
						  .DEQ(memPortal_memslave_ws_DEQ),
						  .CLR(memPortal_memslave_ws_CLR),
						  .FULL_N(memPortal_memslave_ws_FULL_N),
						  .EMPTY_N(memPortal_memslave_ws_EMPTY_N));

  // submodule memPortal_memslave_wsCtrl
  FIFO1 #(.width(32'd1),
	  .guarded(32'd1)) memPortal_memslave_wsCtrl(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(memPortal_memslave_wsCtrl_D_IN),
						     .ENQ(memPortal_memslave_wsCtrl_ENQ),
						     .DEQ(memPortal_memslave_wsCtrl_DEQ),
						     .CLR(memPortal_memslave_wsCtrl_CLR),
						     .D_OUT(memPortal_memslave_wsCtrl_D_OUT),
						     .FULL_N(memPortal_memslave_wsCtrl_FULL_N),
						     .EMPTY_N(memPortal_memslave_wsCtrl_EMPTY_N));

  // submodule p
  mkLedControllerRequestInputPipes p(.CLK(CLK),
				     .RST_N(RST_N),
				     .portalIfc_messageSize_methodNumber(p_portalIfc_messageSize_methodNumber),
				     .portalIfc_requests_0_enq_v(p_portalIfc_requests_0_enq_v),
				     .EN_portalIfc_requests_0_enq(p_EN_portalIfc_requests_0_enq),
				     .EN_setLeds_PipeOut_deq(p_EN_setLeds_PipeOut_deq),
				     .portalIfc_messageSize(p_portalIfc_messageSize),
				     .RDY_portalIfc_messageSize(),
				     .RDY_portalIfc_requests_0_enq(p_RDY_portalIfc_requests_0_enq),
				     .portalIfc_requests_0_notFull(p_portalIfc_requests_0_notFull),
				     .RDY_portalIfc_requests_0_notFull(),
				     .portalIfc_intr_status(p_portalIfc_intr_status),
				     .RDY_portalIfc_intr_status(),
				     .portalIfc_intr_channel(p_portalIfc_intr_channel),
				     .RDY_portalIfc_intr_channel(),
				     .setLeds_PipeOut_first(p_setLeds_PipeOut_first),
				     .RDY_setLeds_PipeOut_first(p_RDY_setLeds_PipeOut_first),
				     .RDY_setLeds_PipeOut_deq(p_RDY_setLeds_PipeOut_deq),
				     .setLeds_PipeOut_notEmpty(p_setLeds_PipeOut_notEmpty),
				     .RDY_setLeds_PipeOut_notEmpty());

  // rule RL_memPortal_memslave_req_aw
  assign WILL_FIRE_RL_memPortal_memslave_req_aw =
	     memPortal_memslave_wsCtrl_EMPTY_N &&
	     memPortal_memslave_req_aws_i_notEmpty__19_AND__ETC___d123 ;

  // rule RL_memPortal_memslave_req_ar
  assign WILL_FIRE_RL_memPortal_memslave_req_ar =
	     memPortal_memslave_req_ars_EMPTY_N &&
	     memPortal_memslave_rsCtrl_i_notEmpty__27_AND_I_ETC___d132 ;

  // rule RL_memPortal_ctrlPort_writeDataRule
  assign WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule =
	     memPortal_ctrlPort_fifoWriteDataFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_EMPTY_N &&
	     (!memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[0] ||
	      memPortal_ctrlPort_fifoWriteDoneFifo_FULL_N) ;

  // rule RL_memPortal_memslave_write_done
  assign WILL_FIRE_RL_memPortal_memslave_write_done =
	     memPortal_memslave_wsCtrl_EMPTY_N &&
	     memPortal_memslave_ws_EMPTY_N &&
	     memPortal_memslave_doneFifo_i_notFull__07_AND__ETC___d112 ;

  // inputs to muxes for submodule ports
  assign MUX_p_portalIfc_requests_0_enq_1__SEL_1 =
	     EN_portalIfc_slave_write_server_writeData_put &&
	     !memPortal_memslave_wsCtrl_D_OUT ;

  // register memPortal_ctrlPort_cycle_count
  assign memPortal_ctrlPort_cycle_count_D_IN =
	     memPortal_ctrlPort_cycle_count + 64'd1 ;
  assign memPortal_ctrlPort_cycle_count_EN = 1'd1 ;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_addrReg
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_D_IN =
	     addr__h546 + 5'd1 ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_EN =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg
  assign memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_D_IN =
	     burstCount__h549 - 8'd1 ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_EN =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg
  assign memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_D_IN =
	     IF_memPortal_ctrlPort_fifoReadAddrGenerator_is_ETC___d19 ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_EN =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg
  assign memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_D_IN =
	     burstCount__h549 == 8'd2 ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_EN =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_D_IN =
	     addr__h1189 + 5'd1 ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_EN =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_D_IN =
	     burstCount__h1192 - 8'd1 ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_EN =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_D_IN =
	     IF_memPortal_ctrlPort_fifoWriteAddrGenerator_i_ETC___d41 ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_EN =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_D_IN =
	     burstCount__h1192 == 8'd2 ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_EN =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_ctrlPort_interruptEnableReg
  assign memPortal_ctrlPort_interruptEnableReg_D_IN =
	     memPortal_ctrlPort_fifoWriteDataFifo_D_OUT[7] ;
  assign memPortal_ctrlPort_interruptEnableReg_EN =
	     WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[19:15] ==
	     5'd4 ;

  // register memPortal_ctrlPort_num_portals_reg
  assign memPortal_ctrlPort_num_portals_reg_D_IN =
	     portalIfc_num_portals__write_x ;
  assign memPortal_ctrlPort_num_portals_reg_EN =
	     EN_portalIfc_num_portals__write ;

  // register memPortal_ctrlPort_snapshot
  assign memPortal_ctrlPort_snapshot_D_IN =
	     memPortal_ctrlPort_cycle_count[31:0] ;
  assign memPortal_ctrlPort_snapshot_EN =
	     EN_portalIfc_slave_read_server_readData_get &&
	     memPortal_memslave_rsCtrl_D_OUT &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT[19:15] ==
	     5'h18 ;

  // register memPortal_memslave_fifoReadAddrGenerator_addrReg
  assign memPortal_memslave_fifoReadAddrGenerator_addrReg_D_IN =
	     addr__h2593 + 5'd1 ;
  assign memPortal_memslave_fifoReadAddrGenerator_addrReg_EN =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoReadAddrGenerator_burstCountReg
  assign memPortal_memslave_fifoReadAddrGenerator_burstCountReg_D_IN =
	     burstCount__h2596 - 8'd1 ;
  assign memPortal_memslave_fifoReadAddrGenerator_burstCountReg_EN =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoReadAddrGenerator_isFirstReg
  assign memPortal_memslave_fifoReadAddrGenerator_isFirstReg_D_IN =
	     IF_memPortal_memslave_fifoReadAddrGenerator_is_ETC___d79 ;
  assign memPortal_memslave_fifoReadAddrGenerator_isFirstReg_EN =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoReadAddrGenerator_isLastReg
  assign memPortal_memslave_fifoReadAddrGenerator_isLastReg_D_IN =
	     burstCount__h2596 == 8'd2 ;
  assign memPortal_memslave_fifoReadAddrGenerator_isLastReg_EN =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoWriteAddrGenerator_addrReg
  assign memPortal_memslave_fifoWriteAddrGenerator_addrReg_D_IN =
	     addr__h3236 + 5'd1 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_addrReg_EN =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoWriteAddrGenerator_burstCountReg
  assign memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_D_IN =
	     burstCount__h3239 - 8'd1 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_EN =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoWriteAddrGenerator_isFirstReg
  assign memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_D_IN =
	     IF_memPortal_memslave_fifoWriteAddrGenerator_i_ETC___d101 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_EN =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // register memPortal_memslave_fifoWriteAddrGenerator_isLastReg
  assign memPortal_memslave_fifoWriteAddrGenerator_isLastReg_D_IN =
	     burstCount__h3239 == 8'd2 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_isLastReg_EN =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;

  // submodule memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_IN =
	     { addr__h546,
	       burstCount__h549,
	       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT[5:0],
	       IF_memPortal_ctrlPort_fifoReadAddrGenerator_is_ETC___d19 } ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_ENQ =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_DEQ =
	     EN_portalIfc_slave_read_server_readData_get &&
	     memPortal_memslave_rsCtrl_D_OUT ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_CLR = 1'b0 ;

  // submodule memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo
  assign memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_IN =
	     memPortal_memslave_req_ars_D_OUT ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_ENQ =
	     WILL_FIRE_RL_memPortal_memslave_req_ar &&
	     memPortal_memslave_rsCtrl_D_OUT ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_DEQ =
	     memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_FULL_N &&
	     IF_memPortal_ctrlPort_fifoReadAddrGenerator_is_ETC___d19 ;
  assign memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_CLR = 1'b0 ;

  // submodule memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_IN =
	     { addr__h1189,
	       burstCount__h1192,
	       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT[5:0],
	       IF_memPortal_ctrlPort_fifoWriteAddrGenerator_i_ETC___d41 } ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_ENQ =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_DEQ =
	     WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_CLR = 1'b0 ;

  // submodule memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_IN =
	     memPortal_memslave_req_aws_D_OUT ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_ENQ =
	     WILL_FIRE_RL_memPortal_memslave_req_aw &&
	     memPortal_memslave_wsCtrl_D_OUT ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_DEQ =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_FULL_N &&
	     IF_memPortal_ctrlPort_fifoWriteAddrGenerator_i_ETC___d41 ;
  assign memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_CLR = 1'b0 ;

  // submodule memPortal_ctrlPort_fifoWriteDataFifo
  assign memPortal_ctrlPort_fifoWriteDataFifo_D_IN =
	     portalIfc_slave_write_server_writeData_put ;
  assign memPortal_ctrlPort_fifoWriteDataFifo_ENQ =
	     EN_portalIfc_slave_write_server_writeData_put &&
	     memPortal_memslave_wsCtrl_D_OUT ;
  assign memPortal_ctrlPort_fifoWriteDataFifo_DEQ =
	     WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule ;
  assign memPortal_ctrlPort_fifoWriteDataFifo_CLR = 1'b0 ;

  // submodule memPortal_ctrlPort_fifoWriteDoneFifo
  assign memPortal_ctrlPort_fifoWriteDoneFifo_D_IN =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[6:1] ;
  assign memPortal_ctrlPort_fifoWriteDoneFifo_ENQ =
	     WILL_FIRE_RL_memPortal_ctrlPort_writeDataRule &&
	     memPortal_ctrlPort_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[0] ;
  assign memPortal_ctrlPort_fifoWriteDoneFifo_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_write_done &&
	     memPortal_memslave_wsCtrl_D_OUT ;
  assign memPortal_ctrlPort_fifoWriteDoneFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_doneFifo
  assign memPortal_memslave_doneFifo_D_IN =
	     memPortal_memslave_wsCtrl_D_OUT ?
	       memPortal_ctrlPort_fifoWriteDoneFifo_D_OUT :
	       memPortal_memslave_fifoWriteDoneFifo_D_OUT ;
  assign memPortal_memslave_doneFifo_ENQ =
	     WILL_FIRE_RL_memPortal_memslave_write_done ;
  assign memPortal_memslave_doneFifo_DEQ =
	     EN_portalIfc_slave_write_server_writeDone_get ;
  assign memPortal_memslave_doneFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo
  assign memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_IN =
	     { addr__h2593,
	       burstCount__h2596,
	       memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT[5:0],
	       IF_memPortal_memslave_fifoReadAddrGenerator_is_ETC___d79 } ;
  assign memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_ENQ =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N ;
  assign memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_DEQ =
	     EN_portalIfc_slave_read_server_readData_get &&
	     !memPortal_memslave_rsCtrl_D_OUT ;
  assign memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_fifoReadAddrGenerator_requestFifo
  assign memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_IN =
	     memPortal_memslave_req_ars_D_OUT ;
  assign memPortal_memslave_fifoReadAddrGenerator_requestFifo_ENQ =
	     WILL_FIRE_RL_memPortal_memslave_req_ar &&
	     !memPortal_memslave_rsCtrl_D_OUT ;
  assign memPortal_memslave_fifoReadAddrGenerator_requestFifo_DEQ =
	     memPortal_memslave_fifoReadAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_FULL_N &&
	     IF_memPortal_memslave_fifoReadAddrGenerator_is_ETC___d79 ;
  assign memPortal_memslave_fifoReadAddrGenerator_requestFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo
  assign memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_IN =
	     { addr__h3236,
	       burstCount__h3239,
	       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT[5:0],
	       IF_memPortal_memslave_fifoWriteAddrGenerator_i_ETC___d101 } ;
  assign memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_ENQ =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N ;
  assign memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_DEQ =
	     MUX_p_portalIfc_requests_0_enq_1__SEL_1 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_fifoWriteAddrGenerator_requestFifo
  assign memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_IN =
	     memPortal_memslave_req_aws_D_OUT ;
  assign memPortal_memslave_fifoWriteAddrGenerator_requestFifo_ENQ =
	     WILL_FIRE_RL_memPortal_memslave_req_aw &&
	     !memPortal_memslave_wsCtrl_D_OUT ;
  assign memPortal_memslave_fifoWriteAddrGenerator_requestFifo_DEQ =
	     memPortal_memslave_fifoWriteAddrGenerator_requestFifo_EMPTY_N &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_FULL_N &&
	     IF_memPortal_memslave_fifoWriteAddrGenerator_i_ETC___d101 ;
  assign memPortal_memslave_fifoWriteAddrGenerator_requestFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_fifoWriteDoneFifo
  assign memPortal_memslave_fifoWriteDoneFifo_D_IN =
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[6:1] ;
  assign memPortal_memslave_fifoWriteDoneFifo_ENQ =
	     EN_portalIfc_slave_write_server_writeData_put &&
	     !memPortal_memslave_wsCtrl_D_OUT &&
	     memPortal_memslave_fifoWriteAddrGenerator_addrBeatFifo_D_OUT[0] ;
  assign memPortal_memslave_fifoWriteDoneFifo_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_write_done &&
	     !memPortal_memslave_wsCtrl_D_OUT ;
  assign memPortal_memslave_fifoWriteDoneFifo_CLR = 1'b0 ;

  // submodule memPortal_memslave_req_ars
  assign memPortal_memslave_req_ars_D_IN =
	     portalIfc_slave_read_server_readReq_put[18:0] ;
  assign memPortal_memslave_req_ars_ENQ =
	     EN_portalIfc_slave_read_server_readReq_put ;
  assign memPortal_memslave_req_ars_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_req_ar ;
  assign memPortal_memslave_req_ars_CLR = 1'b0 ;

  // submodule memPortal_memslave_req_aws
  assign memPortal_memslave_req_aws_D_IN =
	     portalIfc_slave_write_server_writeReq_put[18:0] ;
  assign memPortal_memslave_req_aws_ENQ =
	     EN_portalIfc_slave_write_server_writeReq_put ;
  assign memPortal_memslave_req_aws_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_req_aw ;
  assign memPortal_memslave_req_aws_CLR = 1'b0 ;

  // submodule memPortal_memslave_rs
  assign memPortal_memslave_rs_ENQ =
	     EN_portalIfc_slave_read_server_readReq_put ;
  assign memPortal_memslave_rs_DEQ =
	     EN_portalIfc_slave_read_server_readData_get ;
  assign memPortal_memslave_rs_CLR = 1'b0 ;

  // submodule memPortal_memslave_rsCtrl
  assign memPortal_memslave_rsCtrl_D_IN =
	     portalIfc_slave_read_server_readReq_put[25:19] == 7'd0 ;
  assign memPortal_memslave_rsCtrl_ENQ =
	     EN_portalIfc_slave_read_server_readReq_put ;
  assign memPortal_memslave_rsCtrl_DEQ =
	     EN_portalIfc_slave_read_server_readData_get ;
  assign memPortal_memslave_rsCtrl_CLR = 1'b0 ;

  // submodule memPortal_memslave_ws
  assign memPortal_memslave_ws_ENQ =
	     EN_portalIfc_slave_write_server_writeReq_put ;
  assign memPortal_memslave_ws_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_write_done ;
  assign memPortal_memslave_ws_CLR = 1'b0 ;

  // submodule memPortal_memslave_wsCtrl
  assign memPortal_memslave_wsCtrl_D_IN =
	     portalIfc_slave_write_server_writeReq_put[25:19] == 7'd0 ;
  assign memPortal_memslave_wsCtrl_ENQ =
	     EN_portalIfc_slave_write_server_writeReq_put ;
  assign memPortal_memslave_wsCtrl_DEQ =
	     WILL_FIRE_RL_memPortal_memslave_write_done ;
  assign memPortal_memslave_wsCtrl_CLR = 1'b0 ;

  // submodule p
  assign p_portalIfc_messageSize_methodNumber =
	     pipes_portalIfc_messageSize_methodNumber ;
  assign p_portalIfc_requests_0_enq_v =
	     MUX_p_portalIfc_requests_0_enq_1__SEL_1 ?
	       portalIfc_slave_write_server_writeData_put[38:7] :
	       pipes_portalIfc_requests_0_enq_v ;
  assign p_EN_portalIfc_requests_0_enq =
	     EN_portalIfc_slave_write_server_writeData_put &&
	     !memPortal_memslave_wsCtrl_D_OUT ||
	     EN_pipes_portalIfc_requests_0_enq ;
  assign p_EN_setLeds_PipeOut_deq = EN_pipes_setLeds_PipeOut_deq ;

  // remaining internal signals
  assign IF_memPortal_ctrlPort_fifoReadAddrGenerator_is_ETC___d19 =
	     memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg ?
	       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT[13:6] ==
	       8'd4 :
	       memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg ;
  assign IF_memPortal_ctrlPort_fifoWriteAddrGenerator_i_ETC___d41 =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg ?
	       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT[13:6] ==
	       8'd4 :
	       memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg ;
  assign IF_memPortal_memslave_fifoReadAddrGenerator_is_ETC___d79 =
	     memPortal_memslave_fifoReadAddrGenerator_isFirstReg ?
	       memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT[13:6] ==
	       8'd4 :
	       memPortal_memslave_fifoReadAddrGenerator_isLastReg ;
  assign IF_memPortal_memslave_fifoWriteAddrGenerator_i_ETC___d101 =
	     memPortal_memslave_fifoWriteAddrGenerator_isFirstReg ?
	       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT[13:6] ==
	       8'd4 :
	       memPortal_memslave_fifoWriteAddrGenerator_isLastReg ;
  assign addr__h1189 =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg ?
	       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT[18:14] :
	       memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg ;
  assign addr__h2593 =
	     memPortal_memslave_fifoReadAddrGenerator_isFirstReg ?
	       memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT[18:14] :
	       memPortal_memslave_fifoReadAddrGenerator_addrReg ;
  assign addr__h3236 =
	     memPortal_memslave_fifoWriteAddrGenerator_isFirstReg ?
	       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT[18:14] :
	       memPortal_memslave_fifoWriteAddrGenerator_addrReg ;
  assign addr__h546 =
	     memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg ?
	       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT[18:14] :
	       memPortal_ctrlPort_fifoReadAddrGenerator_addrReg ;
  assign burstCount___1__h1227 =
	     { 2'd0,
	       memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_D_OUT[13:8] } ;
  assign burstCount___1__h2631 =
	     { 2'd0,
	       memPortal_memslave_fifoReadAddrGenerator_requestFifo_D_OUT[13:8] } ;
  assign burstCount___1__h3274 =
	     { 2'd0,
	       memPortal_memslave_fifoWriteAddrGenerator_requestFifo_D_OUT[13:8] } ;
  assign burstCount___1__h584 =
	     { 2'd0,
	       memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_D_OUT[13:8] } ;
  assign burstCount__h1192 =
	     memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg ?
	       burstCount___1__h1227 :
	       memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg ;
  assign burstCount__h2596 =
	     memPortal_memslave_fifoReadAddrGenerator_isFirstReg ?
	       burstCount___1__h2631 :
	       memPortal_memslave_fifoReadAddrGenerator_burstCountReg ;
  assign burstCount__h3239 =
	     memPortal_memslave_fifoWriteAddrGenerator_isFirstReg ?
	       burstCount___1__h3274 :
	       memPortal_memslave_fifoWriteAddrGenerator_burstCountReg ;
  assign burstCount__h549 =
	     memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg ?
	       burstCount___1__h584 :
	       memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg ;
  assign memPortal_memslave_doneFifo_i_notFull__07_AND__ETC___d112 =
	     memPortal_memslave_doneFifo_FULL_N &&
	     (memPortal_memslave_wsCtrl_D_OUT ?
		memPortal_ctrlPort_fifoWriteDoneFifo_EMPTY_N :
		memPortal_memslave_fifoWriteDoneFifo_EMPTY_N) ;
  assign memPortal_memslave_req_aws_i_notEmpty__19_AND__ETC___d123 =
	     memPortal_memslave_req_aws_EMPTY_N &&
	     (memPortal_memslave_wsCtrl_D_OUT ?
		memPortal_ctrlPort_fifoWriteAddrGenerator_requestFifo_FULL_N :
		memPortal_memslave_fifoWriteAddrGenerator_requestFifo_FULL_N) ;
  assign memPortal_memslave_rsCtrl_i_notEmpty__27_AND_I_ETC___d132 =
	     memPortal_memslave_rsCtrl_EMPTY_N &&
	     (memPortal_memslave_rsCtrl_D_OUT ?
		memPortal_ctrlPort_fifoReadAddrGenerator_requestFifo_FULL_N :
		memPortal_memslave_fifoReadAddrGenerator_requestFifo_FULL_N) ;
  assign memPortal_memslave_rs_i_notEmpty__82_AND_IF_me_ETC___d186 =
	     memPortal_memslave_rs_EMPTY_N &&
	     (memPortal_memslave_rsCtrl_D_OUT ?
		memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N :
		memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_EMPTY_N) ;
  assign y_avValue_data__h5281 =
	     (memPortal_memslave_fifoReadAddrGenerator_addrBeatFifo_D_OUT[19:15] ==
	      5'd4) ?
	       { 31'd0, p_portalIfc_requests_0_notFull } :
	       32'd0 ;
  always@(memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT or
	  memPortal_ctrlPort_interruptEnableReg or
	  id or
	  memPortal_ctrlPort_num_portals_reg or
	  memPortal_ctrlPort_cycle_count or memPortal_ctrlPort_snapshot)
  begin
    case (memPortal_ctrlPort_fifoReadAddrGenerator_addrBeatFifo_D_OUT[19:15])
      5'd0, 5'h0C: _theResult_____2__h5194 = 32'd0;
      5'd4:
	  _theResult_____2__h5194 =
	      memPortal_ctrlPort_interruptEnableReg ? 32'd1 : 32'd0;
      5'd8: _theResult_____2__h5194 = 32'd1;
      5'h10: _theResult_____2__h5194 = id;
      5'h14: _theResult_____2__h5194 = memPortal_ctrlPort_num_portals_reg;
      5'h18: _theResult_____2__h5194 = memPortal_ctrlPort_cycle_count[63:32];
      5'h1C: _theResult_____2__h5194 = memPortal_ctrlPort_snapshot;
      default: _theResult_____2__h5194 = 32'h005A05A0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        memPortal_ctrlPort_cycle_count <= `BSV_ASSIGNMENT_DELAY 64'd0;
	memPortal_ctrlPort_fifoReadAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	    5'd0;
	memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	    5'd0;
	memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	memPortal_ctrlPort_interruptEnableReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	memPortal_ctrlPort_num_portals_reg <= `BSV_ASSIGNMENT_DELAY 32'd0;
	memPortal_ctrlPort_snapshot <= `BSV_ASSIGNMENT_DELAY 32'd0;
	memPortal_memslave_fifoReadAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	    5'd0;
	memPortal_memslave_fifoReadAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	memPortal_memslave_fifoReadAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	memPortal_memslave_fifoReadAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	memPortal_memslave_fifoWriteAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	    5'd0;
	memPortal_memslave_fifoWriteAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	memPortal_memslave_fifoWriteAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	memPortal_memslave_fifoWriteAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
      end
    else
      begin
        if (memPortal_ctrlPort_cycle_count_EN)
	  memPortal_ctrlPort_cycle_count <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_cycle_count_D_IN;
	if (memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_EN)
	  memPortal_ctrlPort_fifoReadAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoReadAddrGenerator_addrReg_D_IN;
	if (memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_EN)
	  memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg_D_IN;
	if (memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_EN)
	  memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg_D_IN;
	if (memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_EN)
	  memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg_D_IN;
	if (memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_EN)
	  memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg_D_IN;
	if (memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_EN)
	  memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg_D_IN;
	if (memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_EN)
	  memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg_D_IN;
	if (memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_EN)
	  memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg_D_IN;
	if (memPortal_ctrlPort_interruptEnableReg_EN)
	  memPortal_ctrlPort_interruptEnableReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_interruptEnableReg_D_IN;
	if (memPortal_ctrlPort_num_portals_reg_EN)
	  memPortal_ctrlPort_num_portals_reg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_num_portals_reg_D_IN;
	if (memPortal_ctrlPort_snapshot_EN)
	  memPortal_ctrlPort_snapshot <= `BSV_ASSIGNMENT_DELAY
	      memPortal_ctrlPort_snapshot_D_IN;
	if (memPortal_memslave_fifoReadAddrGenerator_addrReg_EN)
	  memPortal_memslave_fifoReadAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoReadAddrGenerator_addrReg_D_IN;
	if (memPortal_memslave_fifoReadAddrGenerator_burstCountReg_EN)
	  memPortal_memslave_fifoReadAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoReadAddrGenerator_burstCountReg_D_IN;
	if (memPortal_memslave_fifoReadAddrGenerator_isFirstReg_EN)
	  memPortal_memslave_fifoReadAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoReadAddrGenerator_isFirstReg_D_IN;
	if (memPortal_memslave_fifoReadAddrGenerator_isLastReg_EN)
	  memPortal_memslave_fifoReadAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoReadAddrGenerator_isLastReg_D_IN;
	if (memPortal_memslave_fifoWriteAddrGenerator_addrReg_EN)
	  memPortal_memslave_fifoWriteAddrGenerator_addrReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoWriteAddrGenerator_addrReg_D_IN;
	if (memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_EN)
	  memPortal_memslave_fifoWriteAddrGenerator_burstCountReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoWriteAddrGenerator_burstCountReg_D_IN;
	if (memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_EN)
	  memPortal_memslave_fifoWriteAddrGenerator_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoWriteAddrGenerator_isFirstReg_D_IN;
	if (memPortal_memslave_fifoWriteAddrGenerator_isLastReg_EN)
	  memPortal_memslave_fifoWriteAddrGenerator_isLastReg <= `BSV_ASSIGNMENT_DELAY
	      memPortal_memslave_fifoWriteAddrGenerator_isLastReg_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    memPortal_ctrlPort_cycle_count = 64'hAAAAAAAAAAAAAAAA;
    memPortal_ctrlPort_fifoReadAddrGenerator_addrReg = 5'h0A;
    memPortal_ctrlPort_fifoReadAddrGenerator_burstCountReg = 8'hAA;
    memPortal_ctrlPort_fifoReadAddrGenerator_isFirstReg = 1'h0;
    memPortal_ctrlPort_fifoReadAddrGenerator_isLastReg = 1'h0;
    memPortal_ctrlPort_fifoWriteAddrGenerator_addrReg = 5'h0A;
    memPortal_ctrlPort_fifoWriteAddrGenerator_burstCountReg = 8'hAA;
    memPortal_ctrlPort_fifoWriteAddrGenerator_isFirstReg = 1'h0;
    memPortal_ctrlPort_fifoWriteAddrGenerator_isLastReg = 1'h0;
    memPortal_ctrlPort_interruptEnableReg = 1'h0;
    memPortal_ctrlPort_num_portals_reg = 32'hAAAAAAAA;
    memPortal_ctrlPort_snapshot = 32'hAAAAAAAA;
    memPortal_memslave_fifoReadAddrGenerator_addrReg = 5'h0A;
    memPortal_memslave_fifoReadAddrGenerator_burstCountReg = 8'hAA;
    memPortal_memslave_fifoReadAddrGenerator_isFirstReg = 1'h0;
    memPortal_memslave_fifoReadAddrGenerator_isLastReg = 1'h0;
    memPortal_memslave_fifoWriteAddrGenerator_addrReg = 5'h0A;
    memPortal_memslave_fifoWriteAddrGenerator_burstCountReg = 8'hAA;
    memPortal_memslave_fifoWriteAddrGenerator_isFirstReg = 1'h0;
    memPortal_memslave_fifoWriteAddrGenerator_isLastReg = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_portalIfc_slave_read_server_readReq_put &&
	  portalIfc_slave_read_server_readReq_put[13:6] > 8'd4)
	$display("**** \n\n mkMemMethodMux.readReq len=%d \n\n ****",
		 portalIfc_slave_read_server_readReq_put[13:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_portalIfc_slave_write_server_writeReq_put &&
	  portalIfc_slave_write_server_writeReq_put[13:6] > 8'd4)
	$display("**** \n\n mkMemMethodMux.writeReq len=%d \n\n ****",
		 portalIfc_slave_write_server_writeReq_put[13:6]);
  end
  // synopsys translate_on
endmodule  // mkLedControllerRequestWrapperMemPortalPipes

